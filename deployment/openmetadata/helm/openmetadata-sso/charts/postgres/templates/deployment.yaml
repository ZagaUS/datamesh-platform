kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - resources:
            {{- toYaml .Values.resources | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - /usr/libexec/check-container
            initialDelaySeconds: 5
          name: {{ .Chart.Name }}
          livenessProbe:
            exec:
              command:
                - /usr/libexec/check-container
                - '--live'
            initialDelaySeconds: 120
          env:
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: database-password
            - name: POSTGRESQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secret.name }}
                  key: database-name
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: {{ .Values.volume.claimName }}
              mountPath: {{ .Values.volume.mountPath }}
          # image: 'registry.redhat.io/rhel8/postgresql-13:1-56'
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
      volumes:
        - name: {{ .Values.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.volume.claimName }}
  strategy:
    type: Recreate