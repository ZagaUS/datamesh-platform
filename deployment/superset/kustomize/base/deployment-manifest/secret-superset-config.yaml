kind: Secret
apiVersion: v1
metadata:
  name: superset-config
  labels:
    app: superset
stringData:
  superset_bootstrap.sh: |
    #!/bin/bash
    pip install sqlalchemy-trino &&\
    if [ ! -f ~/bootstrap ]; then echo "Running Superset with uid 0" > ~/bootstrap; fi
  superset_config.py: |

    import os
    from flask_caching.backends.rediscache import RedisCache

    def env(key, default=None):
        return os.getenv(key, default)

    MAPBOX_API_KEY = env('MAPBOX_API_KEY', '')
    CACHE_CONFIG = {
          'CACHE_TYPE': 'RedisCache',
          'CACHE_DEFAULT_TIMEOUT': 300,
          'CACHE_KEY_PREFIX': 'superset_',
          'CACHE_REDIS_HOST': env('REDIS_HOST'),
          'CACHE_REDIS_PORT': env('REDIS_PORT'),
          'CACHE_REDIS_PASSWORD': env('REDIS_PASSWORD'),
          'CACHE_REDIS_DB': env('REDIS_DB', 1),
    }
    DATA_CACHE_CONFIG = CACHE_CONFIG

    SQLALCHEMY_DATABASE_URI = f"postgresql+psycopg2://superset:superset123$@supersetdb.os-climate.svc.cluster.local:5432/supersetdb"
    SQLALCHEMY_TRACK_MODIFICATIONS = True

    class CeleryConfig:
      imports  = ("superset.sql_lab", )
      broker_url = f"redis://:{env('REDIS_PASSWORD')}@{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"
      result_backend = f"redis://:{env('REDIS_PASSWORD')}@{env('REDIS_HOST')}:{env('REDIS_PORT')}/0"

    CELERY_CONFIG = CeleryConfig
    RESULTS_BACKEND = RedisCache(
          host=env('REDIS_HOST'),
          password=env('REDIS_PASSWORD'),
          port=env('REDIS_PORT'),
          key_prefix='superset_results'
    )
  superset_init.sh: |
    #!/bin/sh
    set -eu
    echo "Upgrading DB schema..."
    superset db upgrade
    echo "Initializing roles..."
    superset init

    echo "Creating admin user..."
    superset fab create-admin \
                    --username admin \
                    --firstname Superset \
                    --lastname Admin \
                    --email admin@superset.com \
                    --password admin \
                    || true

    if [ -f "/app/configs/import_datasources.yaml" ]; then
      echo "Importing database connections.... "
      superset import_datasources -p /app/configs/import_datasources.yaml
    fi