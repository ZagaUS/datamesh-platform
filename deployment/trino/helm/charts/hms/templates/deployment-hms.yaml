kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.global.HmsSelector}}
  labels:
    app.kubernetes.io/part-of: {{ .Values.deployment.label.partof}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.global.HmsSelector}}
  template:
    metadata:
      labels:
        app: {{ .Values.global.HmsSelector}}
    spec:
      restartPolicy: {{ .Values.deployment.spec.restartPolicy}}
      securityContext: {}
      initContainers:                  #initContainers to wait on prstgres db to start
      - name: wait-for-postgresql-db
        image: busybox
        command:
        - sh
        - -c
        - |
          until nc -z {{ .Values.global.PostgresSelector}}-service 5432; do sleep 1; done
      containers:
        - resources:
            limits:
              cpu: "{{ .Values.deployment.ResourceLimits.cpu}}"
              memory: {{ .Values.deployment.ResourceLimits.memory}}
            requests:
              cpu: "{{ .Values.deployment.ResourcesRequests.cpu}}"
              memory: {{ .Values.deployment.ResourcesRequests.memory}}
          terminationMessagePath: /dev/termination-log
          name: {{ .Values.global.HmsSelector}}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: HIVE_DB_EXTERNAL
              value: 'true'
            - name: DATABASE_HOST
              value: {{ .Values.global.PostgresSelector}}-service
            - name: DATABASE_PORT
              value: "{{ .Values.global.PostgresqlPort}}"
            - name: DATABASE_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.PostgresSelector}}-secret
                  key: PostgresqlDatabase
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.PostgresSelector}}-secret
                  key: PostgresqlUser
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.PostgresSelector}}-secret
                  key: PostgresqlPassword
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.deployment.AWS_ACCESS_KEY_ID }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ .Values.deployment.AWS_SECRET_ACCESS_KEY }}
            - name: S3_ENDPOINT_URL
              value: {{ .Values.deployment.S3_ENDPOINT_URL }}
            - name: S3_BUCKET
              value: {{ .Values.deployment.S3_BUCKET }}
            - name: S3_PREFIX
              value: {{ .Values.deployment.S3_PREFIX }}
          ports:
            - name: tcp
              containerPort: {{ .Values.service.port}}
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: hive-config
              mountPath: /opt/hadoop/etc/hadoop
            - name: hive-config
              mountPath: /opt/hive-metastore/conf
          terminationMessagePolicy: File
          # image: naushadh/hive-metastore
          image: {{ .Values.deployment.image }}
      volumes:
        - name: hive-config
          emptyDir: {}
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%