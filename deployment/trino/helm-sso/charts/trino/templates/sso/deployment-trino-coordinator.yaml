kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Values.Deployment.CoordinatorName }}
  labels:
    app.kubernetes.io/part-of: {{ .Values.global.TrinoSelector}}
spec:
  replicas: {{ .Values.Deployment.Replicas }}
  selector:
    matchLabels:
      app: {{ .Values.global.TrinoSelector}}
  template:
    metadata:
      labels:
        app: {{ .Values.global.TrinoSelector}}
    spec:
      restartPolicy: {{ .Values.Deployment.RestartPolicy }}
      serviceAccountName: {{ .Values.ServiceAccount.Name }}
      terminationGracePeriodSeconds: {{ .Values.Deployment.terminationGracePeriodSeconds }}
      securityContext:
        runAsUser: {{ .Values.Deployment.RunAsUser }}
        runAsGroup: {{ .Values.Deployment.RunAsGroup }}
      containers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: {{ .Values.global.TrinoSelector}}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secret.Name }}
                  key: minio-access-key
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secret.Name }}
                  key: minio-secret-key
            - name: CLUSTER_HOST_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.Secret.Name }}
                  key: cluster-host-url
            - name: OIDC_ISSUER
              value: {{ .Values.Deployment.OIDC_ISSUER }}
            - name: OAUTH_AUTHORIZE_URL
              value:  {{ .Values.Deployment.OAUTH_AUTHORIZE_URL }}
            - name: OAUTH_TOKEN_URL
              value: {{ .Values.Deployment.OAUTH_TOKEN_URL }}
            - name: JWKS_URI
              value: {{ .Values.Deployment.JWKS_URI }}
            - name: TRINO_OAUTH_SECRET
              value: {{ .Values.Deployment.TRINO_OAUTH_SECRET }}
            - name: INTER_COMM_SHARED_SECRET
              value: {{ .Values.Deployment.INTER_COMM_SHARED_SECRET }}
          ports:
            - containerPort: {{ .Values.Deployment.ContainerPort }}
              protocol: {{ .Values.Deployment.Portocol }}
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/trino
            - name: catalog-volume
              mountPath: /etc/trino/catalog
            - name: schemas-volume
              mountPath: /etc/trino/schemas
            # - name: truststore-volume
            #   mountPath: /etc/trino/truststore
            - name: keystore-volume
              mountPath: /etc/trino/keystore
            - name: keystore-p12-volume
              mountPath: /etc/trino/keystore-p12
          terminationMessagePolicy: File
          # image: trinodb/trino
          image: {{ .Values.Deployment.Image }}
      serviceAccount: {{ .Values.ServiceAccount.Name }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.ConfigMap.Coordinator.Name }}
            defaultMode: 420
        - name: catalog-volume
          configMap:
            name:  {{ .Values.ConfigMap.Catalog.Name }}
            defaultMode: 420
        - name: schemas-volume
          configMap:
            name: {{ .Values.ConfigMap.Schema.CoordinatorName }}
            defaultMode: 420
        # - name: truststore-volume
        #   secret:
        #     secretName: truststore
        #     items:
        #       - key: truststore.jks
        #         path: truststore.jks
        #     defaultMode: 420
        - name: keystore-volume
          secret:
            secretName: keystore
            items:
              - key: keystore.jks
                path: keystore.jks
            defaultMode: 420
        - name: keystore-p12-volume
          secret:
            secretName: keystore-p12
            items:
              - key: trino.p12
                path: trino.p12
            defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: {{ .Values.Deployment.StrategyType }}