---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: argocd-application-controller-clusterrole
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]

---
# For a ClusterRoleBinding (cluster-wide)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: argocd-application-controller-clusterrolebinding
subjects:
- kind: ServiceAccount
  name: datamesh-ci-cd-argocd-application-controller
  namespace: datamesh-ci-cd
roleRef:
  kind: ClusterRole
  name: argocd-application-controller-clusterrole
  apiGroup: rbac.authorization.k8s.io
# ---
# # For a RoleBinding (namespace-scoped)
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: argocd-application-controller-rolebinding
#   namespace: your-argo-cd-namespace
# subjects:
# - kind: ServiceAccount
#   name: argocd-application-controller
#   namespace: your-argo-cd-namespace
# roleRef:
#   kind: Role
#   name: argocd-application-controller-role
#   apiGroup: rbac.authorization.k8s.io
# ---
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   namespace: your-argo-cd-namespace
#   name: argocd-application-controller-role
# rules:
# - apiGroups: [""]
#   resources: ["namespaces"]
#   verbs: ["get", "list"]
# ---
# kind: Role
# apiVersion: rbac.authorization.k8s.io/v1
# metadata:
#   name: argocd-application-controller
#   namespace: datamesh-ci-cd
#   labels:
#     app.kubernetes.io/component: application-controller
#     app.kubernetes.io/name: argocd-application-controller
# rules:
# - apiGroups:
#   - '*'
#   resources:
#   - '*'
#   verbs:
#   - '*'